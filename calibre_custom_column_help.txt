Calibre Custom Columns – Technical Summary (Latest Versions 7.x–8.x)
1. Custom Column Definitions
Custom columns are defined in the custom_columns table of metadata.db.

Relevant fields:

id – Unique integer identifier.

label – Internal name (e.g., #mycolumn).

name – Display name in UI.

datatype – Defines type and storage rules.

display – JSON string with display settings.

2. Single-Value Columns
Types: text, comments, int, float, bool, rating, datetime, enumeration (single).

For each column, Calibre creates:

custom_column_X
where X = id of the column.

Table structure example:

CREATE TABLE custom_column_X (
    book INTEGER PRIMARY KEY REFERENCES books(id),
    value TEXT
);
No additional link tables are used.

3. Multi-Value Columns
Types: text, is_multiple, enumeration (with multi-selection), or custom series types.

For each multi-value column, Calibre creates:

custom_column_X
books_custom_column_X_link
custom_column_X stores an integer key (index).

books_custom_column_X_link is a mapping table for many-to-many relationships:

CREATE TABLE books_custom_column_X_link (
    book INTEGER REFERENCES books(id),
    value TEXT,
    PRIMARY KEY (book, value)
);
4. Data Access
Single-value columns: The value field in custom_column_X directly stores the data.

Multi-value columns: Values are stored as multiple rows in books_custom_column_X_link for each book.



custom_columns – Metadata for all custom columns.

custom_column_X – Storage table for column values (X = column ID).

books_custom_column_X_link – (Only for multi-value columns) Links books to multiple values.

2. custom_columns Table Structure
CREATE TABLE custom_columns (
    id        INTEGER PRIMARY KEY,
    label     TEXT UNIQUE NOT NULL,   -- Internal name, must start with '#'
    name      TEXT NOT NULL,          -- Display name in Calibre UI
    datatype  TEXT NOT NULL,          -- Data type (e.g., 'text', 'int', 'text, is_multiple')
    display   TEXT,                   -- JSON string with display options
    is_csp    INTEGER DEFAULT 0,      -- Composite flag
    mark_for_delete INTEGER DEFAULT 0 -- Deletion marker
);
3. custom_column_X Table Structure
Created for every custom column (X = column ID from custom_columns).

Single-value column example (text):

CREATE TABLE custom_column_X (
    book INTEGER PRIMARY KEY REFERENCES books(id) ON DELETE CASCADE,
    value TEXT
);
Other types:

bool → value BOOLEAN

int → value INTEGER

float → value REAL

datetime → value TIMESTAMP

rating → value INTEGER

comments → value TEXT

enumeration → value TEXT

4. books_custom_column_X_link Table (Multi-value Only)
For text, is_multiple and multi-select enumerations.

CREATE TABLE books_custom_column_X_link (
    book INTEGER REFERENCES books(id) ON DELETE CASCADE,
    value TEXT NOT NULL,
    PRIMARY KEY (book, value)
);
A book with multiple values generates multiple rows.

The custom_column_X table still exists, but it typically stores only a reference index (integer).

5. Data Flow
Single-value columns: custom_column_X.value holds the value directly.

Multi-value columns:

custom_column_X links the book to an index.

books_custom_column_X_link holds individual values for that book.

6. Adding/Removing Columns
Add Column:

Insert a row into custom_columns.

Create custom_column_X (and _link table if multi-value).

Delete Column:

Remove from custom_columns.

Drop custom_column_X and _link table.

7. Overview Table
Column Type	Tables Created
text, int, float, bool, etc.	custom_column_X
comments	custom_column_X
datetime	custom_column_X
rating	custom_column_X
enumeration (single)	custom_column_X
text, is_multiple	custom_column_X + books_custom_column_X_link
enumeration (multi-select)	custom_column_X + books_custom_column_X_link

8. Example: Text, Multi-value
-- Add metadata entry
INSERT INTO custom_columns (label, name, datatype, display)
VALUES ('#keywords', 'Keywords', 'text, is_multiple', '{}');

-- Create storage tables
CREATE TABLE custom_column_2 (
    book INTEGER PRIMARY KEY REFERENCES books(id) ON DELETE CASCADE,
    value INTEGER
);
CREATE TABLE books_custom_column_2_link (
    book INTEGER REFERENCES books(id) ON DELETE CASCADE,
    value TEXT NOT NULL,
    PRIMARY KEY (book, value)
);

